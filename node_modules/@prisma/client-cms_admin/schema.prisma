// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  output        = "../../../node_modules/@prisma/client-cms_admin"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

generator dbml {
  provider = "npx prisma-dbml-generator"
}

generator zod {
  provider                  = "node ../../node_modules/zod-prisma-types/dist/bin.js" // npx zod-prisma-types 如果无法生成可以改成 node ../../node_modules/zod-prisma-types/dist/bin.js 会有错误堆栈
  createModelTypes          = true
  createInputTypes          = false
  addInputTypeValidation    = false
  addIncludeType            = true
  addSelectType             = false
  coerceDate                = false
  createRelationValuesTypes = true
  output                    = "../../../libs/prisma-cms_admin/src/zod"
  prismaClientPath          = "@prisma/client-cms_admin"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  // 用的不是很熟
  // relationMode = "prisma"
}

/// @schema.display_name 审计日志
model Audits {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())

  /// @schema.title 关联 id
  auditId      Int
  /// @schema.title 审计类型(关联 schema)
  auditType    String
  /// @schema.title 用户 id
  userId       String
  /// @schema.title 用户名
  username     String?
  /// @schema.title 动作(e.g. update)
  action       String
  /// @schema.title 变化
  auditChanges String  @db.Text
  /// @schema.title 版本
  version      Int
}

/// @schema.display_name 网站模板
/// @schema.display_column name
model SiteTemplate {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  isDeleted Boolean  @default(false)

  /// @schema.title 模板名称
  name     String
  /// @schema.title 模板内容
  /// @schema.column_type textarea
  template String

  // 一个模板可以有多个网站
  /// @schema.model_name Site
  site Site[]

  // 1..1
  /// @schema.model_name SiteTemplateDataDef
  siteTemplateDataDef SiteTemplateDataDef?
}

/// @schema.display_name 模板数据定义
/// @schema.display_column name
model SiteTemplateDataDef {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  isDeleted Boolean  @default(false)

  /// @schema.title 名称
  name    String
  /// @schema.title 结构定义
  defData Json

  // 1..1
  /// @schema.reference SiteTemplate
  /// @schema.x-unique true
  siteTemplateId Int          @unique
  siteTemplate   SiteTemplate @relation(fields: [siteTemplateId], references: [id])
}

/// @schema.primary_key id
/// @schema.display_name 客户信息
/// @schema.display_column name
/// @schema.display_primary_key false
/// @schema.searchable_columns name
model Customer {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  isDeleted Boolean  @default(false)

  /// @schema.title 客户名称
  name String

  // 一个客户可以创建多个网站
  /// @schema.model_name Site
  site Site[]
}

/// @schema.primary_key id
/// @schema.display_name 网站
/// @schema.display_column name
/// @schema.display_primary_key false
/// @schema.searchable_columns name
model Site {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  isDeleted Boolean  @default(false)

  /// @schema.title 网站名称
  name String

  /// @schema.reference SiteTemplate
  siteTemplateId Int
  siteTemplate   SiteTemplate @relation(fields: [siteTemplateId], references: [id])

  /// @schema.reference Customer
  customerId Int
  customer   Customer @relation(fields: [customerId], references: [id])
}
